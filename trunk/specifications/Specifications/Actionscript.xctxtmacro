/**
    Actionscript text macro specifications

    Copyright (c) 2006 KP.
    All rights reserved.

*/
(
    {
        Identifier = actionscript;
        Name = "Actionscript";
        IsMenu = YES;
        DefaultSettings = {
            PreExpressionsSpacing = " ";    // space between keyword and opening paren
            InExpressionsSpacing = "";      // space between paren and expression
            CaseStatementSpacing = "";      // indentation of a case statement
            BlockSeparator = " ";           // space between closing paren and brace (can include a newline)
            PostBlockSeparator = "\n";      // space after a brace and before a new block (can include a newline)
        };
        IncludeContexts = ( "xcode.lang.actionscript" );
    },
        //
        // Block Statements - these show up in all C-based languages _and_ Java
        //
        {
            Identifier = actionscript.block;
            BasedOn = actionscript;
            TextString = "$(Statement)$(BlockSeparator){\n\t<#!statements!#>\n}";
            Statement = "$(Command)$(PreExpressionsSpacing)($(InExpressionsSpacing)$(Expressions)$(InExpressionsSpacing))";
        },
            {
                Identifier = actionscript.block.if;
                BasedOn = actionscript.block;
                Name = "If Block";
                IsMenuItem = YES;
                Command = "if";
                Expressions = "<#condition#>";
                CompletionPrefix = if;
                CycleList = (
                    actionscript.block.if,
                    actionscript.block.ifelse,
                );
            },
            {
                Identifier = actionscript.block.ifelse;
                BasedOn = actionscript.block;
                Name = "If / Else Block";
                IsMenuItem = NO;
                Command = "if";
                Expressions = "<#condition#>";
                TextString = "$(Statement)$(BlockSeparator){\n\t<#!statements!#>\n}$(PostBlockSeparator)else$(BlockSeparator){\n\t<#statements#>\n}";
                CompletionPrefix = ifelse;
            },
            {
                Identifier = actionscript.block.elseif;
                BasedOn = actionscript.block;
                Name = "Else If Block";
                IsMenuItem = NO;
                Command = "else if";
                Expressions = "<#condition#>";
                CompletionPrefix = elseif;
            },
            {
                Identifier = actionscript.block.for;
                BasedOn = actionscript.block;
                Name = "For Loop";
                IsMenuItem = YES;
                Command = "for";
		Expression1 = "<#initial#>";
		Expression2 = "<#compare#>";
		Expression3 = "<#condition#>";
		Expression4 = "<#modulate#>";
		Statement = "$(Command)$(PreExpressionsSpacing)($(InExpressionsSpacing)var $(Expression1):Number; $(Expression1)$(InExpressionsSpacing)$(Expression2)$(InExpressionsSpacing)$(Expression3);$(InExpressionsSpacing)$(Expression1)$(InExpressionsSpacing)$(Expression4)$(InExpressionsSpacing)$(InExpressionsSpacing))";
                CompletionPrefix = for;
                CycleList = (
                    actionscript.block.for,
                    actionscript.block.for.i,
                );
            },
            {
                Identifier = actionscript.block.for.i;
                BasedOn = actionscript.block;
                Name = "For i Loop";
                IsMenuItem = NO;
                Command = "for";
                Expressions = "var i:Number = 0; i < <#limit#>; i++";
                CompletionPrefix = fori;
            },
            
            {
                Identifier = actionscript.block.while;
                BasedOn = actionscript.block;
                Name = "While Loop";
                IsMenuItem = YES;
                Command = "while";
                Expressions = "<#condition#>";
                CompletionPrefix = while;
            },
            {
                Identifier = actionscript.block.dowhile;
                BasedOn = actionscript.block;
                Name = "Do While Loop";
                IsMenuItem = YES;
                Command = "while";
                TextString = "do$(BlockSeparator){\n\t<#!statements!#>\n}$(PreExpressionsSpacing)$(Statement)";
                Expressions = "<#condition#>";
                CompletionPrefix = do;
            },
            {
                Identifier = actionscript.block.switch;
                BasedOn = actionscript.block;
                Name = "Switch Block";
                IsMenuItem = YES;
                Command = "switch";
                TextString = "$(Statement)$(BlockSeparator){\n$(CaseStatementSpacing)case <#constant#>:\n$(CaseStatementSpacing)\t<#!statements!#>\n$(CaseStatementSpacing)\tbreak;\n$(CaseStatementSpacing)default:\n$(CaseStatementSpacing)\tbreak;\n}";
                Expressions = "<#expression#>";
                CompletionPrefix = switch;
            },

        {
            Identifier = actionscript.caseblock;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Case Block";
            TextString = "case$(BlockSeparator)<#constant#>:\n\t<#!statements!#>\n\tbreak;\n";
            CompletionPrefix = case;
        },

        {
            Identifier = actionscript.elseblock;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Else Block";
            TextString = "else$(BlockSeparator){\n\t<#!statements!#>\n}\n";
            CompletionPrefix = else;
                CycleList = (
                    c.elseblock,
                    actionscript.block.elseif,
                );
        },
        
	{
            Identifier = actionscript.publicfunction;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Public Function";
            TextString = "public$(BlockSeparator)function$(BlockSeparator)<#!function!#>$(BlockSeparator)(<#!parameters!#>):<#!return value!#>$(BlockSeparator){\n\t<#!statements!#>\n}";
            CompletionPrefix = pbf;
	},
	
	{
            Identifier = actionscript.privatefunctionq;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Private Function";
            TextString = "private$(BlockSeparator)function$(BlockSeparator)<#!function!#>$(BlockSeparator)(<#!parameters!#>):<#!return value!#>$(BlockSeparator){\n\t<#!statements!#>\n}";
            CompletionPrefix = prf;
	},

        {
            Identifier = actionscript.enum;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Enum Definition";
            TextString = "enum$(PreExpressionsSpacing)<#enum_tag#>$(BlockSeparator){\n\t<#!values!#>\n}";
            CompletionPrefix = enum;
        },
        {
            Identifier = actionscript.struct;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Struct Definition";
            TextString = "struct$(PreExpressionsSpacing)<#struct_tag#>$(BlockSeparator){\n\t<#!fields!#>\n}";
            CompletionPrefix = struct;
        },
        {
            Identifier = actionscript.union;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Union Definition";
            TextString = "union$(PreExpressionsSpacing)<#union_tag#>$(BlockSeparator){\n\t<#!fields!#>\n}";
            CompletionPrefix = union;
        },
        {
            Identifier = actionscript.typedef;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Type Definition";
            TextString = "typedef$(PreExpressionsSpacing)<#!existing_type!#>$(PreExpressionsSpacing)<#new_name#>";
            CompletionPrefix = typedef;
        },

        {
            Identifier = actionscript.printf;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Printf() Call";
            TextString = "printf(\"<#message#>\");";
            CompletionPrefix = printf;
        },
        
        {
            Identifier = actionscript.paren;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Parenthesize Selection";
            TextString = "($(InExpressionsSpacing)<#!expression!#>$(InExpressionsSpacing))";
        },
        {
            Identifier = actionscript.quote;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Quote Selection";
            TextString = "\"<#!text!#>\"";
        },
        {
            Identifier = actionscript.import;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Import Statement";
            TextString = "import <#!file!#>;";
            CompletionPrefix = pim;
            CycleList = (
                actionscript.import,
                actionscript.import.sys
            );
        },
        {
            Identifier = actionscript.import.sys;
            BasedOn = actionscript.import;
            IsMenuItem = NO;
            Name = "Import Statement (System)";
            TextString = "#mport <#domain#>.<#projectname#>.<#package#>.<#class#>;";
            CompletionPrefix = pims;
        },
        {
            Identifier = actionscript.include;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "#Include Statement";
            TextString = "#include \"<#!file!#>\"";
            CompletionPrefix = pin;
            CycleList = (
                c.include
            );
        },
        {
            Identifier = actionscript.copyright;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Copyright Comment";
            TextString = "//\n// Copyright (c) $(YEAR), $(ORGANIZATIONNAME)\n// All rights reserved.\n//\n";
            CompletionPrefix = copyright;
        },

        {
            Identifier = actionscript.comment;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Comment Selection";
            TextString = "/* <#!comment!#> */";
            CompletionPrefix = comment;
        },

        {
            Identifier = actionscript.separatorcomment;
            BasedOn = actionscript;
            IsMenuItem = YES;
            Name = "Separator Comment";
            TextString = "/****************************************************************************/";
            CompletionPrefix = cseparator;
        },
        
)
